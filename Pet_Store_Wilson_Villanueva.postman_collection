{
	"info": {
		"_postman_id": "acfbe9b6-84a6-4ed7-9182-ea2daeb58bda",
		"name": "Pet Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22116414"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Add Pet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 15,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"Perro\"\r\n  },\r\n  \"name\": \"Bianco\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/pet",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Pet Image",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "file to upload",
									"type": "file",
									"src": "/C:/Users/nethe/OneDrive/Im√°genes/Capturas de pantalla/2022-07-17.png"
								},
								{
									"key": "additionalMetadata",
									"value": "alpha",
									"description": "additional data to pass to server",
									"type": "text"
								},
								{
									"key": "petId",
									"value": "15",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL}}/pet/15/uploadImage",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"15",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet Info",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 15,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"Perro\"\r\n  },\r\n  \"name\": \"Bianquito\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/pet",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet with formData",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Bianco",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "14",
									"type": "text",
									"disabled": true
								},
								{
									"key": "id",
									"value": "15",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL}}/pet/15",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Pet by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/pet/15",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"15"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Pet by Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/pet/findByStatus?status=sold",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Pet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "special-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/pet/15",
							"host": [
								"{{URL}}"
							],
							"path": [
								"pet",
								"15"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Place an order for a Pet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 15,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"2022-07-30T22:34:17.086Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/store/order",
							"host": [
								"{{URL}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Order by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/store/order/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"store",
								"order",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Inventory (All orders status)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/store/inventory",
							"host": [
								"{{URL}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "special-key",
								"type": "text"
							}
						]
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var requestBody = JSON.parse(request.data);\r",
									"pm.environment.set(\"USERNAME\", requestBody.username);\r",
									"pm.environment.set(\"PASSWORD\", requestBody.password);\r",
									"pm.environment.set(\"USERID\", requestBody.id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"username\": \"{{$randomUserName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{$randomPassword}}\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{USERNAME}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{PASSWORD}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/user/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{USERNAME}}",
									"disabled": true
								},
								{
									"key": "password",
									"value": "{{PASSWORD}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/user/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Info",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{USERID}},\r\n  \"username\": \"{{USERNAME}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{PASSWORD}}\",\r\n  \"phone\": \"{{$randomPhoneNumber}}\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/{{USERNAME}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"{{USERNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find User by username",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api_key",
								"value": "special-key",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{URL}}/user/{{USERNAME}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"{{USERNAME}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "special-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/user/{{USERNAME}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"{{USERNAME}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}